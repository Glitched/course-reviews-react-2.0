{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"../api/classes.js","imported":["Reviews"],"specifiers":[{"kind":"named","imported":"Reviews","local":"Reviews"}]}],"exports":{"exported":["Form"],"specifiers":[{"kind":"local","local":"Form","exported":"default"}]}}},"options":{"filename":"imports/ui/Form.jsx","filenameRelative":"imports/ui/Form.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/Form.jsx.map","sourceFileName":"imports/ui/Form.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Form"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    return Form;\n  }\n});\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar ReactDOM = void 0;\nmodule.watch(require(\"react-dom\"), {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 1);\nvar Reviews = void 0;\nmodule.watch(require(\"../api/classes.js\"), {\n  Reviews: function (v) {\n    Reviews = v;\n  }\n}, 2);\n\nvar Form = function (_Component) {\n  (0, _inherits3.default)(Form, _Component);\n\n  function Form(props) {\n    (0, _classCallCheck3.default)(this, Form);\n\n    //store the currently selected form values\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      diff: 3,\n      //default\n      quality: 3,\n      //default\n      message: null //bind the submission function to this class\n\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_this);\n    return _this;\n  } // handle a form submission. This will either add the review to the database\n  // or return an error telling the user to try agian.\n\n\n  Form.prototype.handleSubmit = function () {\n    function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault(); //ensure all feilds are filled out\n\n      var text = ReactDOM.findDOMNode(this.refs.reviewText).value.trim();\n      var median = ReactDOM.findDOMNode(this.refs.median).value.trim();\n      var atten = ReactDOM.findDOMNode(this.refs.atten).value.trim();\n\n      if (text != null && median != null && atten != null) {\n        console.log(\"got needed elements\"); // create new review object\n\n        var newReview = {\n          text: text,\n          diff: this.state.diff,\n          quality: this.state.quality,\n          medGrade: median,\n          atten: atten //call the insert funtion\n\n        };\n        Meteor.call('insert', newReview, this.props.courseId, function (error, result) {\n          if (!error) {\n            // Reset form\n            ReactDOM.findDOMNode(_this2.refs.reviewText).value = '';\n            ReactDOM.findDOMNode(_this2.refs.median).value = null;\n            ReactDOM.findDOMNode(_this2.refs.atten).value = null;\n            _this2.diff == 3;\n            _this2.quality == 3;\n\n            _this2.setState({\n              message: \"Thanks! Your review is pending approval.\"\n            });\n          } else {\n            console.log(error);\n\n            _this2.setState({\n              message: \"A error occured. Please try again.\"\n            });\n          }\n        });\n      }\n    }\n\n    return handleSubmit;\n  }();\n\n  Form.prototype.handleQualChange = function () {\n    function handleQualChange(inputElement) {\n      console.log(inputElement.value); //this.state.newReview.quality ==\n    }\n\n    return handleQualChange;\n  }();\n\n  Form.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        \"form\",\n        {\n          className: \"new-task\",\n          onSubmit: this.handleSubmit.bind(this)\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"panel panel-default\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"panel-body\"\n            },\n            React.createElement(\"textarea\", {\n              type: \"text\",\n              ref: \"reviewText\",\n              placeholder: \"Does your professor tell funny jokes? Leave your feedback here!\"\n            })\n          )\n        ),\n        React.createElement(\"hr\", {\n          className: \"divider\"\n        }),\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-3\"\n            },\n            React.createElement(\n              \"h1\",\n              {\n                className: \"secondary-text\"\n              },\n              \"Overall Quality\"\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-1\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"small-icon\",\n                id: \"sm1\"\n              },\n              React.createElement(\n                \"p\",\n                null,\n                this.state.quality\n              )\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-8\"\n            },\n            React.createElement(\"input\", {\n              type: \"range\",\n              id: \"a2\",\n              name: \"qual\",\n              min: \"0\",\n              max: \"5\",\n              step: \"1\"\n            })\n          )\n        ),\n        React.createElement(\"div\", {\n          className: \"sm-spacing\"\n        }),\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-3\"\n            },\n            React.createElement(\n              \"h1\",\n              {\n                className: \"secondary-text\"\n              },\n              \"Level of Difficulty\"\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-1\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"small-icon\",\n                id: \"sm1\"\n              },\n              React.createElement(\n                \"p\",\n                null,\n                this.state.diff\n              )\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-8\"\n            },\n            React.createElement(\"input\", {\n              type: \"range\",\n              id: \"a2\",\n              name: \"qual\",\n              min: \"0\",\n              max: \"5\",\n              step: \"1\"\n            })\n          )\n        ),\n        React.createElement(\"div\", {\n          className: \"sm-spacing\"\n        }),\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-4\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"secondary-text\"\n              },\n              \"Class Median\"\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-8\"\n            },\n            React.createElement(\n              \"select\",\n              {\n                ref: \"median\"\n              },\n              React.createElement(\n                \"option\",\n                {\n                  value: \"9\"\n                },\n                \"A+\"\n              ),\n              React.createElement(\n                \"option\",\n                {\n                  value: \"8\"\n                },\n                \"A\"\n              ),\n              React.createElement(\n                \"option\",\n                {\n                  value: \"7\"\n                },\n                \"A-\"\n              ),\n              React.createElement(\n                \"option\",\n                {\n                  value: \"6\"\n                },\n                \"B+\"\n              ),\n              React.createElement(\n                \"option\",\n                {\n                  value: \"5\"\n                },\n                \"B\"\n              ),\n              React.createElement(\n                \"option\",\n                {\n                  value: \"4\"\n                },\n                \"B-\"\n              ),\n              React.createElement(\n                \"option\",\n                {\n                  value: \"3\"\n                },\n                \"C+\"\n              ),\n              React.createElement(\n                \"option\",\n                {\n                  value: \"2\"\n                },\n                \"C\"\n              ),\n              React.createElement(\n                \"option\",\n                {\n                  value: \"1\"\n                },\n                \"C-\"\n              )\n            )\n          )\n        ),\n        React.createElement(\"div\", {\n          className: \"sm-spacing\"\n        }),\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-4\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"secondary-text\"\n              },\n              \"Attendence\"\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-8\"\n            },\n            React.createElement(\n              \"select\",\n              {\n                ref: \"atten\"\n              },\n              React.createElement(\n                \"option\",\n                {\n                  value: \"1\"\n                },\n                \"Not Mandatory\"\n              ),\n              React.createElement(\n                \"option\",\n                {\n                  value: \"0\"\n                },\n                \"Mandatory\"\n              )\n            )\n          )\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-10\"\n            },\n            React.createElement(\n              \"h2\",\n              {\n                className: \"secondary-text\"\n              },\n              \"All posts are completely anonymous to ensure constructive, honest feedback. You must have previously been enrolled in the className to give feedback\"\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-md-2\"\n            },\n            React.createElement(\"input\", {\n              type: \"submit\",\n              value: \"Post\"\n            })\n          )\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"row\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"col-sm-12\"\n            },\n            React.createElement(\n              \"h2\",\n              {\n                className: \"secondary-text\"\n              },\n              this.state.message\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  // This component gets the task to display through a React prop.\n  // We can use propTypes to indicate it is required\n  courseId: PropTypes.string.isRequired\n}; // export default createContainer(() => {\n//   Meteor.subscribe('reviews');\n//   return {\n//     tasks: Reviews.find({}, { sort: { createdAt: -1 } }).fetch(),\n//   };\n// }, App);","map":{"version":3,"sources":["imports/ui/Form.jsx"],"names":["module","export","Form","React","Component","PropTypes","watch","require","v","ReactDOM","Reviews","props","state","diff","quality","message","handleSubmit","bind","event","preventDefault","text","findDOMNode","refs","reviewText","value","trim","median","atten","console","log","newReview","medGrade","Meteor","call","courseId","error","result","setState","handleQualChange","inputElement","render","propTypes","string","isRequired"],"mappings":"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","file":"imports/ui/Form.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Reviews } from '../api/classes.js';\n\n// Form component to allow user to add a review for selected course.\n// Takes in a course ID.\nexport default class Form extends Component {\n  constructor(props) {\n    super(props);\n\n    //store the currently selected form values\n    this.state = {\n      diff: 3, //default\n      quality: 3, //default\n      message: null\n    }\n\n    //bind the submission function to this class\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // handle a form submission. This will either add the review to the database\n  // or return an error telling the user to try agian.\n  handleSubmit(event) {\n    event.preventDefault();\n\n    //ensure all feilds are filled out\n    const text = ReactDOM.findDOMNode(this.refs.reviewText).value.trim();\n    const median = ReactDOM.findDOMNode(this.refs.median).value.trim();\n    const atten = ReactDOM.findDOMNode(this.refs.atten).value.trim();\n    if (text != null && median != null && atten != null) {\n      console.log(\"got needed elements\");\n\n      // create new review object\n      var newReview = {\n        text: text,\n        diff: this.state.diff,\n        quality: this.state.quality,\n        medGrade: median,\n        atten: atten\n      }\n\n      //call the insert funtion\n      Meteor.call('insert', newReview, this.props.courseId, (error, result) => {\n        if (!error) {\n          // Reset form\n          ReactDOM.findDOMNode(this.refs.reviewText).value = '';\n          ReactDOM.findDOMNode(this.refs.median).value = null;\n          ReactDOM.findDOMNode(this.refs.atten).value = null;\n          this.diff == 3;\n          this.quality == 3;\n\n          this.setState({message: \"Thanks! Your review is pending approval.\"});\n        } else {\n          console.log(error)\n          this.setState({message: \"A error occured. Please try again.\"});\n        }\n      });\n    }\n  }\n\n  handleQualChange(inputElement) {\n    console.log(inputElement.value);\n    //this.state.newReview.quality ==\n  }\n   \n  render() {\n    return (\n      <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n        <div className = \"panel panel-default\">\n          <div className=\"panel-body\">\n            <textarea type=\"text\" ref=\"reviewText\" placeholder=\"Does your professor tell funny jokes? Leave your feedback here!\"/>\n          </div>\n        </div>\n        <hr className=\"divider\" />\n        <div className=\"row\">\n      \t\t<div className=\"col-md-3\">\n  \t\t\t\t    <h1 className=\"secondary-text\">Overall Quality</h1>\n\t  \t\t\t</div>\n\t  \t\t\t<div className=\"col-md-1\">\n\t  \t\t\t\t<div className=\"small-icon\" id=\"sm1\">\n\t\t  \t\t\t\t<p>{this.state.quality}</p>\n\t\t  \t\t\t</div>\n\t  \t\t\t</div>\n\t\t  \t\t<div className=\"col-md-8\">\n\t\t  \t\t\t<input type=\"range\" id=\"a2\" name=\"qual\" min=\"0\" max=\"5\" step=\"1\" />\n\t\t  \t\t</div>\n  \t\t\t</div>\n\t\t\t\t<div className=\"sm-spacing\"></div>\n        <div className='row'>\n          <div className=\"col-md-3\">\n              <h1 className=\"secondary-text\">Level of Difficulty</h1>\n          </div>\n          <div className=\"col-md-1\">\n            <div className=\"small-icon\" id=\"sm1\">\n              <p>{this.state.diff}</p>\n            </div>\n          </div>\n          <div className=\"col-md-8\">\n            <input type=\"range\" id=\"a2\" name=\"qual\" min=\"0\" max=\"5\" step=\"1\" />\n          </div>\n        </div>\n\t\t\t\t<div className=\"sm-spacing\"></div>\n\n\t  \t\t<div className=\"row\">\n\t  \t\t\t<div className=\"col-md-4\">\n\t  \t\t\t\t<div className=\"secondary-text\">Class Median</div>\n\t  \t\t\t</div>\n\t  \t\t\t<div className=\"col-md-8\">\n\t\t\t  \t\t<select ref='median'>\n\t\t\t\t\t\t  <option value=\"9\">A+</option>\n\t\t\t\t\t\t  <option value=\"8\">A</option>\n              <option value=\"7\">A-</option>\n              <option value=\"6\">B+</option>\n              <option value=\"5\">B</option>\n\t\t\t  \t\t\t<option value=\"4\">B-</option>\n\t\t\t  \t\t\t<option value=\"3\">C+</option>\n\t\t\t  \t\t\t<option value=\"2\">C</option>\n\t\t\t  \t\t\t<option value=\"1\">C-</option>\n\t\t\t\t\t  </select>\n\t\t\t\t  </div>\n  \t\t\t</div>\n\n\t\t\t\t<div className=\"sm-spacing\"></div>\n\n\t  \t\t<div className=\"row\">\n\t  \t\t\t<div className=\"col-md-4\">\n\t  \t\t\t\t<div className=\"secondary-text\">Attendence</div>\n\t  \t\t\t</div>\n\t  \t\t\t<div className=\"col-md-8\">\n\t\t\t    \t<select ref='atten'>\n\t\t\t  \t\t\t<option value=\"1\">Not Mandatory</option>\n\t\t\t  \t\t\t<option value=\"0\">Mandatory</option>\n\t\t\t  \t\t</select>\n\t\t\t  \t</div>\n\t  \t\t</div>\n\n    \t<div className=\"row\">\n    \t\t<div className=\"col-md-10\">\n  \t\t\t\t<h2 className=\"secondary-text\" >All posts are completely anonymous to ensure constructive, honest feedback. You must have previously been enrolled in the className to give feedback</h2>\n  \t\t\t</div>\n  \t\t\t<div className=\"col-md-2\">\n  \t\t\t\t<input type=\"submit\" value=\"Post\"/>\n  \t\t\t</div>\n  \t\t</div>\n  \t\t<div className=\"row\">\n  \t\t\t<div className=\"col-sm-12\">\n  \t\t\t<h2 className=\"secondary-text\">{this.state.message}</h2>\n  \t\t\t</div>\n  \t\t</div>\n    </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  // This component gets the task to display through a React prop.\n  // We can use propTypes to indicate it is required\n  courseId: PropTypes.string.isRequired,\n};\n\n// export default createContainer(() => {\n//   Meteor.subscribe('reviews');\n//   return {\n//     tasks: Reviews.find({}, { sort: { createdAt: -1 } }).fetch(),\n//   };\n// }, App);\n"]},"hash":"a34419beffae7f0166eaed0254d98f1ef4e76d1c"}
