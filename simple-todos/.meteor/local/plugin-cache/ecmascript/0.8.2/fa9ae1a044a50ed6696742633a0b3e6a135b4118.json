{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"../api/classes.js","imported":["Reviews"],"specifiers":[{"kind":"named","imported":"Reviews","local":"Reviews"}]},{"source":"./UpdateReview.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"UpdateReview"}]}],"exports":{"exported":["Update"],"specifiers":[{"kind":"local","local":"Update","exported":"Update"}]}}},"options":{"filename":"imports/ui/Update.jsx","filenameRelative":"imports/ui/Update.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/Update.jsx.map","sourceFileName":"imports/ui/Update.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Update"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  Update: function () {\n    return Update;\n  }\n});\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar ReactDOM = void 0;\nmodule.watch(require(\"react-dom\"), {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 1);\nvar createContainer = void 0;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer: function (v) {\n    createContainer = v;\n  }\n}, 2);\nvar Reviews = void 0;\nmodule.watch(require(\"../api/classes.js\"), {\n  Reviews: function (v) {\n    Reviews = v;\n  }\n}, 3);\nvar UpdateReview = void 0;\nmodule.watch(require(\"./UpdateReview.jsx\"), {\n  \"default\": function (v) {\n    UpdateReview = v;\n  }\n}, 4);\n\nvar Update = function (_Component) {\n  (0, _inherits3.default)(Update, _Component);\n\n  function Update(props) {\n    (0, _classCallCheck3.default)(this, Update);\n    return (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n  } //approve a review\n\n\n  Update.prototype.approveReview = function () {\n    function approveReview(review) {\n      Meteor.call('makeVisible', review, function (error, result) {\n        if (!error && result == 1) {//console.log(\"approved review \" + review._id);\n        } else {\n          console.log(error);\n        }\n      });\n    }\n\n    return approveReview;\n  }(); //remove a review\n\n\n  Update.prototype.removeReview = function () {\n    function removeReview(review) {\n      Meteor.call('removeReview', review, function (error, result) {\n        if (!error && result == 1) {//console.log(\"removed review \" + review._id);\n        } else {\n          console.log(error);\n        }\n      });\n    }\n\n    return removeReview;\n  }(); //show all reviews that have not been approved\n\n\n  Update.prototype.renderReviews = function () {\n    function renderReviews() {\n      var _this2 = this;\n\n      return this.props.reviewsToApprove.map(function (review) {\n        return (//create a new class \"button\" that will set the selected class to this class when it is clicked.\n          React.createElement(UpdateReview, {\n            key: review._id,\n            info: review,\n            removeHandler: _this2.removeReview,\n            approveHandler: _this2.approveReview\n          })\n        );\n      });\n    }\n\n    return renderReviews;\n  }();\n\n  Update.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"ul\",\n          null,\n          this.renderReviews()\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return Update;\n}(Component);\n\nUpdate.propTypes = {\n  reviewsToApprove: PropTypes.array.isRequired,\n  loading: React.PropTypes.bool\n};\nmodule.exportDefault(createContainer(function (props) {\n  var subscription = Meteor.subscribe('reviews', null, 0); //get unapproved reviews\n\n  var loading = !subscription.ready();\n  var reviewsToApprove = Reviews.find({}).fetch();\n  return {\n    reviewsToApprove: reviewsToApprove,\n    loading: loading\n  };\n}, Update));","map":{"version":3,"sources":["imports/ui/Update.jsx"],"names":["module","export","Update","React","Component","PropTypes","watch","require","v","ReactDOM","createContainer","Reviews","UpdateReview","props","approveReview","review","Meteor","call","error","result","console","log","removeReview","renderReviews","reviewsToApprove","map","_id","render","propTypes","array","isRequired","loading","bool","exportDefault","subscription","subscribe","ready","find","fetch"],"mappings":"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","file":"imports/ui/Update.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { Reviews } from '../api/classes.js';\nimport UpdateReview from './UpdateReview.jsx';\n\n// Holder component for moderator interface. Shows all unapproved reviews and\n// allows the moderator to remove or approve them.\nexport class Update extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  //approve a review\n  approveReview(review) {\n    Meteor.call('makeVisible', review, (error, result) => {\n      if (!error && result==1) {\n        //console.log(\"approved review \" + review._id);\n      } else {\n        console.log(error)\n      }\n    });\n  }\n\n  //remove a review\n  removeReview(review) {\n    Meteor.call('removeReview', review, (error, result) => {\n      if (!error && result==1) {\n        //console.log(\"removed review \" + review._id);\n      } else {\n        console.log(error)\n      }\n    });\n  }\n\n  //show all reviews that have not been approved\n  renderReviews() {\n    return this.props.reviewsToApprove.map((review) => (\n      //create a new class \"button\" that will set the selected class to this class when it is clicked.\n      <UpdateReview key={review._id} info={review} removeHandler={this.removeReview} approveHandler={this.approveReview}/>\n    ));\n  }\n\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.renderReviews()}\n        </ul>\n      </div>\n    )\n  };\n}\n\nUpdate.propTypes = {\n  reviewsToApprove: PropTypes.array.isRequired,\n  loading: React.PropTypes.bool\n};\n\nexport default createContainer((props) => {\n  const subscription = Meteor.subscribe('reviews', null, 0); //get unapproved reviews\n  const loading = !subscription.ready();\n  const reviewsToApprove = Reviews.find({}).fetch();\n  return {\n    reviewsToApprove, loading,\n  };\n}, Update);\n"]},"hash":"fa9ae1a044a50ed6696742633a0b3e6a135b4118"}
